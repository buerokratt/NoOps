apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.release_name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.release_name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.release_name }}"
    spec:
      initContainers:
        - name: bring-train-data
          image: alpine/git:2.36.3
          volumeMounts:
            - name: trainbot-rasa-locations
              mountPath: /rasa/locations
          command: ["/bin/sh"]
          args:
            - "-c"
            - >
              git clone $DSL_REPO /tmp/dsl-source &&
              echo 'downloaded' && cd /tmp/dsl-source && git checkout v2.0.1 &&
              cp -r /tmp/dsl-source/$DSL_PATH/* /rasa/locations/ &&
              echo 'moved' &&
              chmod 777 -R /rasa &&
              ls /rasa/locations/
          env:
            - name: DSL_REPO
              value: {{ .Values.images.bot.dsl.repo }}
            - name: DSL_PATH
              value: {{ .Values.images.bot.dsl.path }}

        - name: bring-common-service
          image: alpine/git:2.36.3
          volumeMounts:
            - name: dmapper-commonservice
              mountPath: /rasa/OpenSearch
          command: ["/bin/sh"]
          args:
            - "-c"
            - >
              git clone $DSL_REPO /tmp/dsl-source &&
              echo 'downloaded' &&
              cp -r /tmp/dsl-source/$DSL_PATH/* /rasa/OpenSearch/ &&
              echo 'moved' &&
              chmod 755 -R /rasa/OpenSearch &&
              ls /rasa/OpenSearch/
          env:
            - name: DSL_REPO
              value: {{ .Values.images.commonservice.dsl.repo }}
            - name: DSL_PATH
              value: {{ .Values.images.commonservice.dsl.path }}

        - name: init-copy-files-backoffice
          image: "{{ .Values.images.backoffice.registry }}/{{ .Values.images.backoffice.repository }}:{{ .Values.images.backoffice.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../DataMapper/backoffice/ /workspace/app/module/
              cp -r ../DataMapper/common-services/ /workspace/app/module/
              
              ls -la /workspace/app/module/
          volumeMounts:
            - name: dmapper-volume
              mountPath: /workspace/app/module/


        - name: init-copy-files-analytics
          image: "{{ .Values.images.analytics.registry }}/{{ .Values.images.analytics.repository }}:{{ .Values.images.analytics.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../DataMapper/analytics /workspace/app/module/
              ls -la /workspace/app/module/
          volumeMounts:
            - name: dmapper-volume
              mountPath: /workspace/app/module/
        - name: init-copy-files-training
          image: "{{ .Values.images.training.registry }}/{{ .Values.images.training.repository }}:{{ .Values.images.training.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              mkdir -p /workspace/app/module/training/hbs/training
              cp -r ../DataMapper/training/ /workspace/app/module/
              mv /workspace/app/module/training/hbs/hbs/* /workspace/app/module/training/hbs/training
              ls -la /workspace/app/module/
          volumeMounts:
            - name: dmapper-volume
              mountPath: /workspace/app/module/
        - name: init-copy-files-services
          image: "{{ .Values.images.services.registry }}/{{ .Values.images.services.repository }}:{{ .Values.images.services.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../DataMapper/services /workspace/app/module/
              ls -la /workspace/app/module/
          volumeMounts:
            - name: dmapper-volume
              mountPath: /workspace/app/module/
        - name: datamapper-service-dsl
          image: alpine/git:2.36.3
          volumeMounts:
             - name: byk-dsl-services
               mountPath: /data
          command: ["/bin/sh"]
          args:
             - "-c"
             - >
               git clone $DSL_REPO /tmp/dsl-source &&
               echo 'downloaded' &&
               cp -r /tmp/dsl-source/$DSL_PATH/* /data/ &&
               cp -r /tmp/dsl-source/secrets /data/ &&
              
               echo 'moved' &&
               ls /data/
          env:
             - name: DSL_REPO
               value: {{ .Values.images.pipelines.service.repo }}
             - name: DSL_PATH
               value: {{ .Values.images.pipelines.service.path }}


        - name: service-sec
          image: alpine/git:2.36.3
          volumeMounts:
            - name: service-sec
              mountPath: /rasa/secrets
          command: ["/bin/sh"]
          args:
            - "-c"
            - >
              git clone $DSL_REPO /tmp/dsl-source &&
              echo 'downloaded' &&
              cp -r /tmp/dsl-source/$DSL_PATH/* /rasa/secrets/ &&
              echo 'moved' &&
              ls /rasa
          env:
            - name: DSL_REPO
              value: {{ .Values.images.sec.service.repo }}
            - name: DSL_PATH
              value: {{ .Values.images.sec.service.path }}               
          # securityContext:
          #  runAsUser: 0     
          #  runAsGroup: 0         
      securityContext:
        runAsUser: 0     
        runAsGroup: 0         
      containers:
        - name: "{{ .Values.release_name }}"
          image: "{{ .Values.images.scope.registry }}/{{ .Values.images.scope.repository }}:{{ .Values.images.scope.tag }}"
          env:
#            - name: EXTENSION
#              value: .handlebars
            - name: CONTENT_FOLDER
              value: /rasa
          ports:
            - containerPort: 3000
              name: http
          volumeMounts:
            - name: shared-volume
              mountPath: /rasa/shared-data
            - name: shared-cron-volume
              mountPath: /rasa/cron-data
            - name: dmapper-volume
              mountPath: /workspace/app/module/
            - name: byk-dsl-services
              mountPath: /data
              readOnly: false
            - name: trainbot-rasa-locations
              mountPath: /rasa/locations
            - name: dmapper-commonservice
              mountPath: /rasa/OpenSearch
            - name: service-sec
              mountPath: /rasa/secrets
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 15

      volumes:
        - name: shared-volume
          persistentVolumeClaim:
            claimName: privateruuter-pvc
        - name: shared-cron-volume
          persistentVolumeClaim:
            claimName: cron-pvc
        - name: dmapper-volume
          emptyDir: {}
        - name: byk-dsl-services
          persistentVolumeClaim:
            claimName: byk-dsl-services
        - name: trainbot-rasa-locations
          persistentVolumeClaim:
            claimName: pvc-trainbot
        - name: dmapper-commonservice
          persistentVolumeClaim:
            claimName: pvc-commonservice
        - name: service-sec
          persistentVolumeClaim:
            claimName: pvc-service-secrets
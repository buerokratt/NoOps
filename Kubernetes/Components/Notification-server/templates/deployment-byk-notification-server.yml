apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.release_name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.release_name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.release_name }}"
    spec:
      containers:
        - name: "{{ .Values.release_name }}"
          image: "{{ .Values.images.scope.registry }}/{{ .Values.images.scope.repository }}:{{ .Values.images.scope.tag }}"
          ports:
            - containerPort: 4040
          env:
            - name: OPENSEARCH_PROTOCOL
              value: "{{ .Values.env.OPENSEARCH_PROTOCOL }}"
            - name: OPENSEARCH_HOST
              value: "{{ .Values.env.OPENSEARCH_HOST }}"
            - name: OPENSEARCH_PORT
              value: "{{ .Values.env.OPENSEARCH_PORT }}"
            - name: OPENSEARCH_USERNAME
              value: "{{ .Values.env.OPENSEARCH_USERNAME }}"
            - name: OPENSEARCH_PASSWORD
              value: "{{ .Values.env.OPENSEARCH_PASSWORD }}"
            - name: PORT
              value: "{{ .Values.env.PORT }}"
            - name: REFRESH_INTERVAL
              value: "{{ .Values.env.REFRESH_INTERVAL }}"
            - name: CORS_WHITELIST_ORIGINS
              value: "{{ .Values.env.CORS_WHITELIST_ORIGINS }}"
            - name: RUUTER_URL
              value: "{{ .Values.env.RUUTER_URL }}"
            - name: CHAT_TERMINATION_DELAY
              value: "{{ .Values.env.CHAT_TERMINATION_DELAY }}"
          volumeMounts:
            - name: notification-server
              mountPath: /app/notification-server
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
      volumes:
        - name: notification-server
          emptyDir: {}
      initContainers:
        - name: clone-repo
          image: alpine/git
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              git clone --branch dev --single-branch https://github.com/buerokratt/Buerokratt-Chatbot.git /app/Buerokratt-Chatbot && \
              cp -r /app/Buerokratt-Chatbot/notification-server/* /app/notification-server/
          volumeMounts:
            - name: notification-server
              mountPath: /app/notification-server 

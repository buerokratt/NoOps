
apiVersion: batch/v1
kind: Job
metadata:
  name: "job-{{ .Values.release_name }}-training"
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
#  ttlSecondsAfterFinished: 120
  template:
    metadata:
      name: "job-{{ .Values.release_name }}-training"
    spec:
      initContainers:
       - name: wait-for-opensearch
         image: curlimages/curl:7.85.0
         command: ['sh', '-c', 'until curl -s http://component-opensearch-node:9200; do echo waiting for opensearch; sleep 5; done']
       - name: opensearch-clone-training
         image: alpine/git:2.36.3
         volumeMounts:
            - name: opensearch-repos
              mountPath: /root/training
         command: ["/bin/sh"]
         args:
            - "-c"
            - >
              git clone $DSL_REPO /tmp/dsl-source &&
              echo 'downloaded' &&
              cp -r /tmp/dsl-source/$DSL_PATH/fieldMappings /root/training/ &&
              cp -r /tmp/dsl-source/$DSL_PATH/mock /root/training/ &&
              cp -r /tmp/dsl-source/$DSL_PATH/deploy-opensearch.sh /root/training/ &&
              cp -r /tmp/dsl-source/$DSL_PATH/templates /root/training/ &&
              echo 'moved' &&
              ls /root/training
         env:
            - name: DSL_REPO
              value: {{ .Values.images.opensearch.training.repo }}
            - name: DSL_PATH
              value: {{ .Values.images.opensearch.training.path }}
      containers:
        - name: opensearch-update-training
          image: alpine
          command: ["/bin/sh"]
          args:
            - "-c"
            - >
              apk add curl &&
              cd /training &&
              sh deploy-opensearch.sh http://component-opensearch-node:9200 admin:admin
          volumeMounts:
            - name: opensearch-repos
              mountPath: /training

      volumes:
        - name: opensearch-repos
          emptyDir: {}
      restartPolicy: Never


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ .Values.release_name }}-ingress"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://admin.prod.buerokratt.ee, https://prod.buerokratt.ee, https://tim.prod.buerokratt.ee, https://admin.prod.buerokratt.ee"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/additional-response-headers: "Access-Control-Allow-Headers: Content-Type"
    nginx.ingress.kubernetes.io/cors-allow-headers: "content-type"
    nginx.ingress.kubernetes.io/cors-expose-headers: "cs-exposed-header1, cs-exposed-header2"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: {{ .Values.ingress.certIssuerName | quote }}
 
  labels:
    name: "{{ .Values.release_name }}-ingress"
spec:
  rules:
  - host: ruuter.{{ .Values.domain }}
    http:
      paths:
      - pathType: Prefix
        path: "/v2/public/(.*)"
        backend:
          service:
            name: "{{ .Values.release_name }}"
            port:
              number: 8080
  tls:
  - hosts:
    - ruuter.{{ .Values.domain }}
    secretName: {{ .Values.secretname }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.release_name }}"
  annotations:
    sidecar.istio.io/inject: "true"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.release_name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.release_name }}"
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: init-copy-files
          image: "{{ .Values.images.dsl.registry }}/{{ .Values.images.dsl.repository }}:{{ .Values.images.dsl.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../Ruuter/public/backoffice /DSL
              ls -la
          volumeMounts:
            - name: ruuter-volume
              mountPath: /DSL/
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          resources:
            limits:
              cpu: "250m"
              memory: "512Mi"
      containers:
        - name: "{{ .Values.release_name }}"
          image: "{{ .Values.images.scope.registry }}/{{ .Values.images.scope.repository }}:{{ .Values.images.scope.tag }}"
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: logging.level.root
              value: "{{ .Values.env.LOGGING_LEVEL_ROOT }}"
            - name: LOG_LEVEL_TIMING
              value: "{{ .Values.env.LOG_LEVEL_TIMING }}"
            - name: application.logging.displayRequestContent
              value: "{{ .Values.env.APPLICATION_LOGGING_DISPLAY_REQUEST_CONTENT }}"
            - name: application.logging_displayResponseContent
              value: "{{ .Values.env.APPLICATION_LOGGING_DISPLAY_RESPONSE_CONTENT }}"
            - name: application.cors.allowedOrigins
              value: "{{ .Values.env.APPLICATION_CORS_ALLOWED_ORIGINS }}"
            - name: application.DSL.allowedFiletypes
              value: .yml,.yaml,.md,.tmp
            - name: application.internalRequests.disabled
              value: "true"
            - name: application.logging.printStackTrace
              value: "true"
          volumeMounts:
            - name: ruuter-volume
              mountPath: /DSL/
            - name: urls-env
              mountPath: /app/constants.ini
              subPath: constants.ini
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          resources:
            limits:
              cpu: "250m"
              memory: "512Mi"
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
      volumes:
        - name: ruuter-volume
          emptyDir: {}
        - name: urls-env
          configMap:
            name: urls-env-config

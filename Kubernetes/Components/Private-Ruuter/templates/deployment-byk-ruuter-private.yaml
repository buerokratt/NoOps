apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.release_name }}"
  annotations:
    sidecar.istio.io/inject: "true"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.release_name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.release_name }}"
    spec:
      initContainers:
        - name: init-copy-files-backoffice
          image: "{{ .Values.images.backoffice.registry }}/{{ .Values.images.backoffice.repository }}:{{ .Values.images.backoffice.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../Ruuter/private/backoffice /DSL
              ls -la 
          volumeMounts:
            - name: privateruuter-volume
              mountPath: /DSL/
        - name: init-copy-files-analytics
          image: "{{ .Values.images.analytics.registry }}/{{ .Values.images.analytics.repository }}:{{ .Values.images.analytics.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../Ruuter/analytics /DSL
              ls -la 
          volumeMounts:
            - name: privateruuter-volume
              mountPath: /DSL/                            
        - name: init-copy-files-training
          image: "{{ .Values.images.training.registry }}/{{ .Values.images.training.repository }}:{{ .Values.images.training.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../Ruuter/training /DSL
              ls -la 
          volumeMounts:
            - name: privateruuter-volume
              mountPath: /DSL/             
        - name: init-copy-files-services
          image: "{{ .Values.images.services.registry }}/{{ .Values.images.services.repository }}:{{ .Values.images.services.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../Ruuter/services /shared-data
              ls -la 
          volumeMounts:
            - name: shared-volume
              mountPath: /shared-data/    
        - name: setup-symlink
          image: busybox
          securityContext:
            runAsUser: 1000     
            runAsGroup: 1000     
               
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Log directory permissions before attempting changes
              echo "Initial permissions for /shared-data:"
              ls -ld /shared-data
              
              # Try to change ownership and permissions
              echo "Attempting to change ownership and permissions..."
              chown -R 1000:1000 /shared-data || echo "Failed to change ownership"
              chmod -R 777 /shared-data/services || echo "Failed to change permissions"
              
              # Log directory permissions after changes
              echo "Permissions for /shared-data after attempting change:"
              ls -ld /shared-data/services

              # Create symlink
              ln -s /shared-data/services/ /DSL/
          volumeMounts:
            - name: privateruuter-volume
              mountPath: /DSL/
            - name: shared-volume
              mountPath: /shared-data/
      # securityContext:
      #   runAsUser: 0     
      #   runAsGroup: 0     
      #   fsGroup: 1000            
      containers:
        - name: "{{ .Values.release_name }}"
          image: "{{ .Values.images.scope.registry }}/{{ .Values.images.scope.repository }}:{{ .Values.images.scope.tag }}"
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: logging.level.root
              value: "{{ .Values.env.LOGGING_LEVEL_ROOT }}"
            - name: LOG_LEVEL_TIMING
              value: "{{ .Values.env.LOG_LEVEL_TIMING }}"
            - name: application.logging.displayRequestContent
              value: "{{ .Values.env.APPLICATION_LOGGING_DISPLAY_REQUEST_CONTENT }}"
            - name: application.logging.displayResponseContent
              value: "{{ .Values.env.APPLICATION_LOGGING_DISPLAY_RESPONSE_CONTENT }}"
            - name: application.cors.allowedOrigins
              value: "{{ .Values.env.APPLICATION_CORS_ALLOWED_ORIGINS }}"
            - name: application.openSearchConfiguration.url
              value: "{{ .Values.env.APPLICATION_OPENSEARCH_CONFIGURATION_URL }}"
            - name: application.httpCodesAllowList
              value: "{{ .Values.env.APPLICATION_HTTPCODESALLOWLIST }}"
            - name: application.DSL.allowedFiletypes
              value: .yml,.yaml,.md,.tmp
            - name: application.internalRequests.allowedIPs
              value: "192.168.42.124, 192.168.42.110"
            - name: application.internalRequests.disabled
              value: "true"
            - name: application.logging.printStackTrace
              value: "true"
            - name: REACT_APP_RUUTER_SERVICES_GET_PATH
              value: "{{ .Values.env.REACT_APP_RUUTER_SERVICES_GET_PATH }}"
            - name: REACT_APP_RUUTER_SERVICES_POST_PATH
              value: "{{ .Values.env.REACT_APP_RUUTER_SERVICES_POST_PATH }}"
            - name: REACT_APP_RUUTER_SERVICES_PATH
              value: "{{ .Values.env.REACT_APP_RUUTER_SERVICES_PATH }}"
            - name: REACT_APP_RUUTER_SERVICES_DIR_PATH
              value: "{{ .Values.env.REACT_APP_RUUTER_SERVICES_DIR_PATH }}"
          volumeMounts:
            - name: privateruuter-volume
              mountPath: /DSL/
            - name: urls-env
              mountPath: /app/constants.ini
              subPath: constants.ini
            - name: shared-volume
              mountPath: /shared-data/
              readOnly: false
#            - name: byk-dsl-services
#              mountPath: /data
#              readOnly: false
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10

      volumes:
        - name: privateruuter-volume
          emptyDir: {}
        - name: urls-env
          configMap:
            name: urls-env-config-private
        - name: shared-volume
          persistentVolumeClaim:
            claimName: privateruuter-pvc 
#        - name: byk-dsl-services
#          persistentVolumeClaim:
#            claimName: byk-dsl-services
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Values.release_name }}-training-pipelines-os"
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  ttlSecondsAfterFinished: 120
  template:
    metadata:
      name: "{{ .Values.release_name }}"
    spec:
      initContainers:
       - name: pipelines-copy-files
         image: alpine/git:2.36.3
         volumeMounts:
            - name: pipelines
              mountPath: /root/Pipelines
         command: ["/bin/sh"]
         args:
            - "-c"
            - >
              git clone $DSL_REPO /tmp/dsl-source &&
              echo 'downloaded' &&
              cp -r /tmp/dsl-source/$DSL_PATH/ /root/Pipelines/ &&
              echo 'moved' &&
              ls /root/Pipelines/dsl-source
         env:
            - name: DSL_REPO
              value: {{ .Values.images.pipelines.training.repo }}
            - name: DSL_PATH
              value: {{ .Values.images.pipelines.training.path }}
       - name: wait-for-pipeline
         image: curlimages/curl:7.85.0
         command: ['sh', '-c', 'until curl -s http://module-byk-training-gui-pipelines:3010; do echo waiting for opensearch; sleep 5; done']
      containers:
        - name: training-pipelines-os-seed
          image: curlimages/curl:7.79.1
          command: ["/bin/sh"]
          args:
            - "-c"
            - >
              pwd && ls -la &&
              ls -l /Pipelines && cd /Pipelines/dsl-source/DSL/Pipelines &&
              sh init_with_mocks.sh http://module-byk-training-gui-pipelines:3010
          volumeMounts:
            - name: pipelines
              mountPath: /Pipelines

      volumes:
      - name: pipelines
        emptyDir: {}
      restartPolicy: Never
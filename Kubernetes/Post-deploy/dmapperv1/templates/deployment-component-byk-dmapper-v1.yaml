apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.release_name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.release_name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.release_name }}"
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: copy-training-files
          image: "{{ .Values.images.dsl.registry }}/{{ .Values.images.dsl.repository }}:{{ .Values.images.dsl.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              mkdir /rasa
              cp -r ../DataMapper/training/hbs/views/ /workspace/app/views
              cp -r ../DataMapper/training/hbs/js/  /workspace/app/js
              cp -r ../DataMapper/training/hbs/locations/ /workspace/app/locations
              ls -la /rasa

          volumeMounts:
            - name: dmapper-v1-volume
              mountPath: /workspace/app/
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          resources:
            limits:
              cpu: "250m"
              memory: "512Mi"

      containers:
        - name: "{{ .Values.release_name }}"
          image: ghcr.io/varmoh/training-module:pre-alpha-dmapper-1.2.1
          env:
            - name: PORT
              value: "3000"
          ports:
            - containerPort: 3000
              name: http
          volumeMounts:
            - name: dmapper-v1-volume
              mountPath: /workspace/app
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          resources:
            limits:
              cpu: "250m"
              memory: "512Mi"
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 23
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 22
            periodSeconds: 10
      volumes:
        - name: dmapper-v1-volume
          emptyDir: {}

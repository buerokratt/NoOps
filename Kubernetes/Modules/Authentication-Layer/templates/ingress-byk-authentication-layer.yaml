apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ .Values.release_name }}-ingress"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    # nginx.ingress.kubernetes.io/additional-response-headers: "Access-Control-Allow-Headers: Content-Type"
    # nginx.ingress.kubernetes.io/cors-allow-headers: "content-type"
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   add_header Content-Security-Policy "upgrade-insecure-requests; default-src 'self'; font-src 'self' data:; img-src 'self' data:; script-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; connect-src 'self' https://ruuter.prod.buerokratt.ee/v1/public https://tim.prod.buerokratt.ee https://admin.prod.buerokratt.ee https://ruuter.prod.buerokratt.ee/v1/private;";
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    name: "{{ .Values.release_name }}-ingress"
spec:
  rules:
    - host: admin.{{ .Values.domain }}
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: "{{ .Values.release_name }}"
                port:
                  number: 443
  tls:
    - hosts:
        - admin.{{ .Values.domain }}
      secretName: {{ .Values.secretname }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.release_name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.release_name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.release_name }}"
    spec:
      # automountServiceAccountToken: false
      # automountServiceAccountToken: false
      containers:
        - name: "{{ .Values.release_name }}"
          image: "{{ .Values.images.gui.registry }}/{{ .Values.images.gui.repository }}:{{ .Values.images.gui.tag }}"
          ports:
            - containerPort: 443
              name: http
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 32
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 33
            periodSeconds: 10
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d
              #subPath: default.conf
            - name: env-config-volume
              mountPath: /usr/share/nginx/html/customer-service/env-config.js
              subPath: env-config.js
            - name: run
              mountPath: /var/run
            - name: log
              mountPath: /var/log/nginx
            - name: cache
              mountPath: /var/cache/nginx
          # securityContext:
          #   allowPrivilegeEscalation: false
          #   capabilities:
          #     add:
          #       - CHOWN
          #     drop:
          #       - ALL
          #   privileged: false
          #   readOnlyRootFilesystem: true
          #   runAsNonRoot: true
          #   runAsUser: 10001
          # resources:
          #   limits:
          #     cpu: "250m"
          #     memory: "512Mi"
          #   - name: run
          #     mountPath: /var/run
          #   - name: log
          #     mountPath: /var/log/nginx
          #   - name: cache
          #     mountPath: /var/cache/nginx
          # securityContext:
          #   allowPrivilegeEscalation: false
          #   capabilities:
          #     add:
          #       - CHOWN
          #     drop:
          #       - ALL
          #   privileged: false
          #   readOnlyRootFilesystem: true
          #   runAsNonRoot: true
          #   runAsUser: 10001
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
      volumes:
        - name: nginx-config-volume
          configMap:
            name: constant-config
        - name: env-config-volume
          configMap:
            name: constant-config
        - name: run
          emptyDir:
            medium: ""
        - name: log
          emptyDir:
            medium: ""
        - name: cache
          emptyDir:
            medium: ""

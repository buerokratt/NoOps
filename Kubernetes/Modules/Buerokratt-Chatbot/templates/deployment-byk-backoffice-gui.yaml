apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.release_name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.release_name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.release_name }}"
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: init-copy-files
          image: "{{ .Values.images.dsl.registry }}/{{ .Values.images.dsl.repository }}:{{ .Values.images.dsl.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../Ruuter/public/ /app/DSL
              cp -r ../Resql/ /app/DSL
              cp -r ../DataMapper/ /app/DSL
              cp -r ../Liquibase/ /app/DSL
              ls -la
          volumeMounts:
            - name: buerokratt-dsl
              mountPath: /app/DSL
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          resources:
            limits:
              cpu: "250m"
              memory: "512Mi"
      containers:
        - name: "{{ .Values.release_name }}"
          image: "{{ .Values.images.gui.registry }}/{{ .Values.images.gui.repository }}:{{ .Values.images.gui.tag }}"
          ports:
            - containerPort: 3001
              name: http
          env:
            - name: REACT_APP_RUUTER_API_URL
              value: "{{ .Values.env.REACT_APP_RUUTER_API_URL }}"
            - name: REACT_APP_RUUTER_PRIVATE_API_URL
              value: "{{ .Values.env.REACT_APP_RUUTER_PRIVATE_API_URL }}"
            - name: REACT_APP_BUEROKRATT_CHATBOT_URL
              value: "{{ .Values.env.REACT_APP_BUEROKRATT_CHATBOT_URL }}"
            - name: REACT_APP_MENU_URL
              value: "{{ .Values.env.REACT_APP_MENU_URL }}"
            - name: REACT_APP_MENU_PATH
              value: "{{ .Values.env.REACT_APP_MENU_PATH }}"
            - name: REACT_APP_CUSTOMER_SERVICE_LOGIN
              value: "{{ .Values.env.REACT_APP_CUSTOMER_SERVICE_LOGIN }}"
            - name: DOMAIN
              value: "{{ .Values.env.DOMAIN }}"
            - name: REACT_APP_CONVERSATIONS_BASE_URL
              value: "{{ .Values.env.REACT_APP_CONVERSATIONS_BASE_URL }}"
            - name: REACT_APP_TRAINING_BASE_URL
              value: "{{ .Values.env.REACT_APP_TRAINING_BASE_URL }}"
            - name: REACT_APP_ANALYTICS_BASE_URL
              value: "{{ .Values.env.REACT_APP_ANALYTICS_BASE_URL }}"
            - name: REACT_APP_SERVICES_BASE_URL
              value: "{{ .Values.env.REACT_APP_SERVICES_BASE_URL }}"
            - name: REACT_APP_SETTINGS_BASE_URL
              value: "{{ .Values.env.REACT_APP_SETTINGS_BASE_URL }}"
            - name: REACT_APP_MONITORING_BASE_URL
              value: "{{ .Values.env.REACT_APP_MONITORING_BASE_URL }}"
            - name: REACT_APP_SERVICE_ID
              value: "{{ .Values.env.REACT_APP_SERVICE_ID }}"
            - name: REACT_APP_NOTIFICATION_NODE_URL
              value: "{{ .Values.env.REACT_APP_NOTIFICATION_NODE_URL }}"
#            - name: REACT_APP_CSP
#              value: "{{ .Values.env.REACT_APP_CSP }}"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          resources:
            limits:
              cpu: "250m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 3001
            initialDelaySeconds: 11
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3001
            initialDelaySeconds: 19
            periodSeconds: 10
          volumeMounts:
            - name: buerokratt-dsl
              mountPath: /app/DSL
            - name: menu-configmap-volume
              mountPath: /app/menu.json
              subPath: menu.json
              readOnly: true
            - name: run
              mountPath: /var/run
            - name: log
              mountPath: /var/log/nginx
            - name: cache
              mountPath: /var/cache/nginx
      volumes:
        - name: menu-configmap-volume
          configMap:
            name: menu-configmap
        - name: buerokratt-dsl
          persistentVolumeClaim:
            claimName: pvc-buerokratt-dsl
        - name: run
          emptyDir:
            medium: ""
        - name: log
          emptyDir:
            medium: ""
        - name: cache
          emptyDir:
            medium: ""
